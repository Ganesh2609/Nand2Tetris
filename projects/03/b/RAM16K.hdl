// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux4Way(in=load,sel=address[12..13],a=o1,b=o2,c=o3,d=o4);
	RAM4K(in=in,address=address[0..11],load=o1,out=s1);
	RAM4K(in=in,address=address[0..11],load=o2,out=s2);
	RAM4K(in=in,address=address[0..11],load=o3,out=s3);
	RAM4K(in=in,address=address[0..11],load=o4,out=s4);
	Mux4Way16(a=s1,b=s2,c=s3,d=s4,sel=address[12..13],out=out);
}